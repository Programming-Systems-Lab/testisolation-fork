% This file was created with JabRef 2.7.2.
% Encoding: ISO8859_1
before the dependent test
@book{Massol:2003,
 author = {Massol, Vincent and Husted, Ted},
 title = {JUnit in Action},
 year = {2003},
 isbn = {1930110995},
 publisher = {Manning Publications Co.},
 address = {Greenwich, CT, USA},
} 

@inproceedings{Greiler:2013:SAT,
 author = {Greiler, Michaela and Zaidman, Andy and Deursen, Arie van and Storey, Margaret-Anne},
 title = {Strategies for avoiding text fixture smells during software evolution},
 booktitle = {MSR},
 year = {2013},
 pages = {387--396},
} 

@inproceedings{Schuler:2009:EMT,
 author = {Schuler, David and Dallmeier, Valentin and Zeller, Andreas},
 title = {Efficient mutation testing by checking invariant violations},
 booktitle = {ISSTA},
 year = {2009},
 isbn = {978-1-60558-338-9},
 pages = {69--80},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1572272.1572282},
} 

@inproceedings{Samimi:2013:DM,
 author = {Samimi, Hesam and Hicks, Rebecca and Fogel, Ari and Millstein, Todd},
 title = {Declarative mocking},
 booktitle = {Proceedings of the 2013 International Symposium on Software Testing and Analysis},
 series = {ISSTA 2013},
 year = {2013},
 pages = {246--256},
} 


@Misc{randomjunit,
  key =   {randomjunit},
  title =    {{Random jUnit executor}},
  note = {\url{http://randomjunit.sourceforge.net/}},
}
This tool spells "JUnit" incorrectly!  But the bibliography entry is correct.

@Misc{easymock,
  key =   {easymock},
  title =    {{EasyMock}},
  note = {\url{http://easymock.org/}},
}

@Misc{crystalbugreport,
  key =   {crystalbugreport},
  title =    {{A bug report in Crystal about dependent tests.}},
  note = {\url{https://code.google.com/p/crystalvc/issues/ detail?id=57}},
}

@Misc{synoptic,
  key =   {synoptic},
  title =    {{Synoptic}},
  note = {\url{http://synoptic.sourceforge.net/}},
}

@Misc{eclipsebugreport,
  key =   {eclipsebug},
  title =    {{A spurious bug report in Eclipse}},
  note = {\url{https://bugs.eclipse.org/bugs/show_bug.cgi?id=43500}},
}

@Misc{junitordering,
  key =   {junitorder},
  title =    {{Test Execution Order in JUnit}},
  note = {\url{https://github.com/junit-team/junit/blob/master/doc/ReleaseNotes4.11.md#test-execution-order}},
}

@Misc{clibug,
  key =   {clibug},
  title =    {{A CLI bug masked by dependent tests.}},
  note = {\url{https://issues.apache.org/jira/browse/CLI-26} \url{https://
issues.apache.org/jira/browse/CLI-186} \url{https://issues.apache.org/jira/browse/CLI-187}},
}

@Misc{apachebug,
  key =   {apache},
  title =    {{Apache issue tracker}},
  note = {\url{https://issues.apache.org/jira}},
}

@Misc{eclipsebug,
  key =   {eclipse},
  title =    {{Eclipse issue tracker}},
  note = {\url{https://bugs.eclipse.org}},
}

@Misc{jbossbug,
  key =   {jboss},
  title =    {{JBoss issue tracker}},
  note = {\url{https://issues.jboss.org/}},
}

@Misc{hibernatebug,
  key =   {hibernate},
  title =    {{Hibernate issue tracker}},
  note = {\url{https://hibernate.atlassian.net}},
}

@Misc{codehausbug,
  key =   {Codehaus},
  title =    {{Codehaus issue tracker}},
  note = {\url{http://jira.codehaus.org}},
}

@Misc{asm,
  key =   {asm},
  title =    {{ASM}},
  note = {\url{http://asm.ow2.org/}},
}

@Misc{depunit,
  key =   {depunit},
  title =    {{DepUnit}},
  note = {\url{https://code.google.com/p/depunit/}},
}

@Misc{testng,
  key =   {testng},
  title =    {{TestNG}},
  note = {\url{http://testng.org/}},
}

@Misc{beanutils,
  key =   {beanutils},
  title =    {{Apache Beanutils}},
  note = {\url{http://commons.apache.org/beanutils/}},
}

@Misc{xmlsecurity,
  key =   {xmlsecurity},
  title =    {{XML Security}},
  note = {\url{http://projects.apache.org/projects/xml_security_java.html}},
}

@Misc{sir,
  key =   {sir},
  title =    {{SIR}},
  note = {\url{http://sir.unl.edu}},
}

@Misc{alltestprior,
  author = {Sai Zhang and K{\i}van{\c{c}} Mu{\c{s}}lu},
  title =    {{List of papers on test prioritization techniques from major software
  engineering conferences and journals, 2000--2013.}},
  note = {\url{http://homes.cs.washington.edu/~szhang/test_prioritization_paper_list_2000-2013.txt}},
}

@Misc{swt,
  key =   {swt},
  title =    {{SWT}},
  note = {\url{http://eclipse.org/swt/}},
}

@Misc{jodatime,
  key =   {jodatime},
  title =    {{Joda Time}},
  note = {\url{http://joda-time.sourceforge.net/}},
}

@Misc{crystal,
  key =   {crystal},
  title =    {{Crystal VC}},
  note = {\url{http://crystalvc.googlecode.com}},
}

@Misc{cli,
  key =   {cli},
  title =    {{Apache CLI}},
  note = {\url{http://commons.apache.org/cli/}},
}

@INPROCEEDINGS{bergelsonetal:EEE:2006,
  author = {Bergelson, B. and Exman, I.},
  title = {Dynamic Test Composition In Hierarchical Software Testing},
  booktitle = {2006 IEEE 24th Convention of Electrical and Electronics Engineers
	in Israel},
  year = {2006},
  pages = {37--41},
  doi = {10.1109/EEEI.2006.321078},
  owner = {joe},
  timestamp = {2011.12.26}
}

@INPROCEEDINGS{briandetal:SEKE:2002,
  author = {Briand, Lionel C. and Feng, Jie and Labiche, Yvan},
  title = {Using genetic algorithms and coupling measures to devise optimal
	integration test orders},
  booktitle = {Proceedings of the 14th International Conference on Software Engineering
	and Knowledge Engineering, SEKE '02},
  year = {2002},
  pages = {43--50},
  acmid = {568769},
  doi = {http://doi.acm.org/10.1145/568760.568769},
  isbn = {1-58113-556-4},
  keywords = {genetic algorithms, integration order, integration testing, object-oriented
	Software Engineering},
  location = {Ischia, Italy},
  numpages = {8},
  owner = {joe},
  timestamp = {2011.12.26},
  url = {http://doi.acm.org/10.1145/568760.568769}
}

@ARTICLE{brown:CSUR:1974,
  author = {Brown, P. J.},
  title = {Programming and Documenting Software Projects},
  journal = {ACM Computing Surveys},
  year = {1974},
  volume = {6},
  pages = {213--220},
  month = {December},
  acmid = {356637},
  issn = {0360-0300},
  issue = {4},
  numpages = {8},
  owner = {joe},
  publisher = {ACM},
  timestamp = {2012.02.29},
  url = {http://doi.acm.org/10.1145/356635.356637}
}

@INPROCEEDINGS{Chays:2000:FTD:347324.348954,
  author = {Chays, David and Dan, Saikat and Frankl, Phyllis G. and Vokolos,
	Filippos I. and Weber, Elaine J.},
  title = {A framework for testing database applications},
  booktitle = {ISSTA},
  year = {2000},
  pages = {147--157},
  acmid = {348954},
  doi = {10.1145/347324.348954},
  isbn = {1-58113-266-2},
  keywords = {database, software testing, test data},
  location = {Portland, Oregon, United States},
  numpages = {11},
  url = {http://doi.acm.org/10.1145/347324.348954}
}

@ARTICLE{Cohen97theaetg,
  author = {David Cohen and Ieee Computer Society and Siddhartha R. Dalal and
	Michael L. Fredman and Gardner C. Patton},
  title = {The AETG System: An Approach to Testing Based on Combinatorial Design},
  journal = {IEEE Transactions on Software Engineering},
  year = {1997},
  volume = {23},
  pages = {437--444}
}

@INPROCEEDINGS{Cohen:2003,
  author = {Cohen, Myra B. and Gibbons, Peter B. and Mugridge, Warwick B. and
	Colbourn, Charles J.},
  title = {Constructing test suites for interaction testing},
  booktitle = {Proceedings of the 25th International Conference on Software Engineering},
  year = {2003},
  series = {ICSE '03},
  pages = {38--48},
  acmid = {776822},
  isbn = {0-7695-1877-X},
  location = {Portland, Oregon},
  numpages = {11},
  url = {http://dl.acm.org/citation.cfm?id=776816.776822}
}

@ARTICLE{Do:2010:ETC:1907658.1908088,
  author = {Do, Hyunsook and Mirarab, Siavash and Tahvildari, Ladan and Rothermel,
	Gregg},
  title = {The Effects of Time Constraints on Test Case Prioritization: A Series
	of Controlled Experiments},
  journal = {IEEE Transactions on Software Engineering},
  year = {2010},
  volume = {36},
  pages = {593--617},
  number = {5},
  acmid = {1908088},
  address = {Piscataway, NJ, USA},
  doi = {10.1109/TSE.2010.58},
  issn = {0098-5589},
  issue_date = {September 2010},
  keywords = {Regression testing, test case prioritization, cost-benefits, Bayesian
	networks, empirical studies.},
  numpages = {25},
  publisher = {IEEE Press},
  url = {http://dx.doi.org.offcampus.lib.washington.edu/10.1109/TSE.2010.58}
}

@INPROCEEDINGS{Elbaum:2006,
  author = {Elbaum, Sebastian and Chin, Hui Nee and Dwyer, Matthew B. and Dokulil,
	Jonathan},
  title = {Carving differential unit test cases from system test cases},
  booktitle = {FSE},
  year = {2006},
  pages = {253--264},
  acmid = {1181806},
  doi = {http://doi.acm.org/10.1145/1181775.1181806},
  isbn = {1-59593-468-5},
  keywords = {automated test generation, carving and replay, regression testing},
  location = {Portland, Oregon, USA},
  numpages = {12},
  url = {http://doi.acm.org/10.1145/1181775.1181806}
}

@INPROCEEDINGS{Elbaum:2000:PTC:347324.348910,
  author = {Elbaum, Sebastian and Malishevsky, Alexey G. and Rothermel, Gregg},
  title = {Prioritizing test cases for regression testing},
  booktitle = {ISSTA},
  year = {2000},
  pages = {102--112},
  acmid = {348910},
  doi = {10.1145/347324.348910},
  isbn = {1-58113-266-2},
  location = {Portland, Oregon, United States},
  numpages = {11},
  url = {http://doi.acm.org.offcampus.lib.washington.edu/10.1145/347324.348910}
}

@ARTICLE{eldredetal:1978,
  author = {Eldred and Nelson},
  title = {Estimating Software reliability from test data},
  journal = {Microelectronics Reliability},
  year = {1978},
  volume = {17},
  pages = {67--73},
  number = {1},
  doi = {10.1016/0026-2714(78)91139-3},
  issn = {0026-2714},
  owner = {joe},
  timestamp = {2012.02.29},
  url = {http://www.sciencedirect.com/science/article/pii/0026271478911393}
}

@INPROCEEDINGS{fraseretal:ISSTA:2011,
  author = {Gordon Fraser and Andreas Zeller},
  title = {Generating Parameterized Unit Tests},
  booktitle = {ISSTA},
  year = {2011},
  pages = {364--374},
  location = {Toronto, ON, Canada},
  owner = {joe},
  timestamp = {2012.03.14}
}

@inproceedings{Misailovic:2007,
 author = {Misailovic, Sasa and Milicevic, Aleksandar and Petrovic, Nemanja and Khurshid, Sarfraz and Marinov, Darko},
 title = {Parallel test generation and execution with {Korat}},
 booktitle = {FSE},
 year = {2007},
 isbn = {978-1-59593-811-4},
 location = {Dubrovnik, Croatia},
 pages = {135--144},
 numpages = {10},
} 


@ARTICLE{Gray:1994:QGB:191843.191886,
  author = {Gray, Jim and Sundaresan, Prakash and Englert, Susanne and Baclawski,
	Ken and Weinberger, Peter J.},
  title = {Quickly generating billion-record synthetic databases},
  journal = {SIGMOD Rec.},
  year = {1994},
  volume = {23},
  pages = {243--252},
  number = {2},
  acmid = {191886},
  address = {New York, NY, USA},
  doi = {10.1145/191843.191886},
  issn = {0163-5808},
  issue_date = {June 1994},
  numpages = {10},
  publisher = {ACM},
  url = {http://doi.acm.org/10.1145/191843.191886}
}

@INPROCEEDINGS{harroldetal:OOPSLA:2001,
  author = {Harrold, Mary Jean and Jones, James A. and Li, Tongyu and Liang,
	Donglin and Orso, Alessandro and Pennings, Maikel and Sinha, Saurabh
	and Spoon, S. Alexander and Gujarathi, Ashish},
  title = {Regression test selection for {Java} Software},
  booktitle = {OOPSLA},
  year = {2001},
  pages = {312--326},
  acmid = {504305},
  doi = {http://doi.acm.org/10.1145/504282.504305},
  isbn = {1-58113-335-9},
  location = {Tampa Bay, FL, USA},
  numpages = {15},
  owner = {joe},
  timestamp = {2012.02.29},
  url = {http://doi.acm.org/10.1145/504282.504305}
}

@BOOK{hatcheretal:ant:2002,
  title = {Java Development with {Ant}},
  publisher = {Manning Publications},
  year = {2002},
  author = {Erik Hatcher and Steve Loughran},
  owner = {joe},
  timestamp = {2012.03.06}
}

@ARTICLE{howden:ToC:1975,
  author = {Howden, W.E.},
  title = {Methodology for the Generation of Program Test Data},
  journal = {IEEE Transactions on Computers},
  year = {1975},
  volume = {C-24},
  pages = {554--560},
  number = {5},
  doi = {10.1109/T-C.1975.224259},
  issn = {0018-9340},
  keywords = { Flowchart analysis, inequality solution techniques, program paths,
	program testing, systems of predicates.;},
  owner = {joe},
  timestamp = {2012.02.29}
}

@ARTICLE{IEEE:829-2008,
  author = {IEEE},
  title = {{IEEE} Standard for Software and System Test Documentation},
  journal = {IEEE Std 829-2008},
  year = {2008},
  pages = {1--118},
  doi = {10.1109/IEEESTD.2008.4578383},
  keywords = {IEEE standard;integrity level specification;software inspection;software
	testing;software validation;software verification;system requirements
	analysis;system test documentation;IEEE standards;formal specification;program
	testing;program verification;software standards;system documentation;}
}

@ARTICLE{IEEE:829-1998,
  author = {IEEE},
  title = {{IEEE} Standard for Software Test Documentation},
  journal = {IEEE Std 829-1998},
  year = {1998},
  doi = {10.1109/IEEESTD.1998.88820},
  keywords = {IEEE Std 829-1998;IEEE standard;basic software test documents;document
	content;document form;software test documentation;test case specification;test
	design specification;test incident report;test item transmittal report;test
	log;test plan;test procedure specification;test summary report;IEEE
	standards;}
}

@INPROCEEDINGS{kapfhammeretal:FSE:2003,
  author = {Kapfhammer, Gregory M. and Soffa, Mary Lou},
  title = {A family of test adequacy criteria for database-driven applications},
  booktitle = {ESEC/FSE},
  year = {2003},
  pages = {98--107},
  acmid = {940086},
  doi = {10.1145/940071.940086},
  isbn = {1-58113-743-5},
  keywords = {database-driven applications, test adequacy criteria},
  location = {Helsinki, Finland},
  numpages = {10},
  owner = {joe},
  timestamp = {2012.03.15},
  url = {http://doi.acm.org/10.1145/940071.940086}
}

@INCOLLECTION{karp:NP:1972,
  author = {Richard M. Karp},
  title = {Reducibility Among Combinatorial Problems},
  booktitle = {Complexity of Computer Computations},
  publisher = {Plenum},
  year = {1972},
  editor = {R. E. Miller and J. W. Thatcher},
  pages = {85--103},
  owner = {joe},
  timestamp = {2012.03.04}
}

@article{10.1109/TSE.2012.26,
author = {Shifa Zehra Haidry and Tim Miller},
title = {Using Dependency Structures for Prioritization of Functional Test Suites},
journal ={IEEE Transactions on Software Engineering},
volume = {39},
number = {2},
issn = {0098-5589},
year = {2013},
pages = {258-275},
doi = {http://doi.ieeecomputersociety.org/10.1109/TSE.2012.26},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
}

@article{Rothermel:2004:TSC,
 author = {Rothermel, Gregg and Elbaum, Sebastian and Malishevsky, Alexey G. and Kallakuri, Praveen and Qiu, Xuemei},
 title = {On Test Suite Composition and Cost-effective Regression Testing},
 journal = {ACM Trans. Softw. Eng. Methodol.},
 issue_date = {July 2004},
 volume = {13},
 number = {3},
 month = jul,
 year = {2004},
 issn = {1049-331X},
 pages = {277--331},
 numpages = {55},
 url = {http://doi.acm.org/10.1145/1027092.1027093},
 doi = {10.1145/1027092.1027093},
 acmid = {1027093},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Empirical studies, regression testing, test suite composition},
} 


@inproceedings{Qu:2008:CRT,
 author = {Qu, Xiao and Cohen, Myra B. and Rothermel, Gregg},
 title = {Configuration-aware Regression Testing: An Empirical Study of Sampling and Prioritization},
 booktitle = {ISSTA},
 year = {2008},
 isbn = {978-1-60558-050-0},
 location = {Seattle, WA, USA},
 pages = {75--86},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1390630.1390641},
 doi = {10.1145/1390630.1390641},
 acmid = {1390641},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {combinatorial interaction testing, configurable software, prioritization, regression testing},
} 


@INPROCEEDINGS{Kim:2002:HTP:581339.581357,
  author = {Kim, Jung-Min and Porter, Adam},
  title = {A history-based test prioritization technique for regression testing
	in resource constrained environments},
  booktitle = {ICSE},
  year = {2002},
  pages = {119--129},
  acmid = {581357},
  doi = {10.1145/581339.581357},
  isbn = {1-58113-472-X},
  keywords = {empirical study, prioritization, regression testing, test history},
  location = {Orlando, Florida},
  numpages = {11},
  url = {http://doi.acm.org/10.1145/581339.581357}
}

@INPROCEEDINGS{Leitner:2007,
  author = {Leitner, Andreas and Ciupa, Ilinca and Oriol, Manuel and Meyer, Bertrand
	and Fiva, Arno},
  title = {Contract driven development = test driven development - writing test
	cases},
  booktitle = {Proceedings of the 6th Joint Meeting of the European Software Engineering
	Conference and the ACM SIGSOFT Symposium on The Foundations of Software
	Engineering},
  year = {2007},
  series = {ESEC-FSE '07},
  pages = {425--434},
  acmid = {1287685},
  doi = {http://doi.acm.org/10.1145/1287624.1287685},
  isbn = {978-1-59593-811-4},
  keywords = {unit testing},
  location = {Dubrovnik, Croatia},
  numpages = {10},
  url = {http://doi.acm.org/10.1145/1287624.1287685}
}

@ARTICLE{mcgregoretal:CACM:1994,
  author = {McGregor, John D. and Korson, Timothy D.},
  title = {Integrated object-oriented testing and development processes},
  journal = {Communincations of the ACM},
  year = {1994},
  volume = {37},
  pages = {59--77},
  month = {September},
  acmid = {184075},
  address = {New York, NY, USA},
  doi = {http://doi.acm.org/10.1145/182987.184075},
  issn = {0001-0782},
  issue = {9},
  numpages = {19},
  owner = {joe},
  publisher = {ACM},
  timestamp = {2012.02.29},
  url = {http://doi.acm.org/10.1145/182987.184075}
}

@INPROCEEDINGS{milleretal:ICRS:1975,
  author = {Miller,Jr., E. F. and Melton, R. A.},
  title = {Automated generation of testcase datasets},
  booktitle = {Proceedings of the International Conference on Reliable Software},
  year = {1975},
  pages = {51--58},
  doi = {10.1145/800027.808424},
  location = {Los Angeles, California},
  numpages = {8}
}

@INPROCEEDINGS{DBLP:conf/sigsoft/MusluSW11,
  author = {K\i{}van\c{c} Mu\c{s}lu and Bilge Soran and Jochen Wuttke},
  title = {Finding bugs by isolating unit tests},
  booktitle = {FSE NIER},
  year = {2011},
  series = {SIGSOFT/FSE '11},
  pages = {496--499},
  doi = {10.1145/2025113.2025202},
  location = {Szeged, Hungary},
  numpages = {4}
}

@INPROCEEDINGS{SPLAT,
  author = {Chang Hwan Peter Kim and Darko Marinov and Sarfraz Khurshid and Don Batory},
  title = {{SPLat}: Lightweight Dynamic Analysis for Reducing Combinatorics in Testing Configurable Systems},
  booktitle = {FSE'13},
  year = {2013}
}

@inproceedings{Arcuri:2011,
 author = {Arcuri, Andrea and Briand, Lionel},
 title = {A practical guide for using statistical tests to assess randomized algorithms in software engineering},
 booktitle = {ICSE},
 year = {2011},
 isbn = {978-1-4503-0445-0},
 location = {Waikiki, Honolulu, HI, USA},
 pages = {1--10},
 numpages = {10},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{ZhangSBE2011,
   author = {Sai Zhang and David Saff and Yingyi Bu and Michael D. Ernst},
   title = {Combined static and dynamic automated test generation},
   booktitle = {ISSTA},
   pages = {353--363},
   address = {Toronto, Canada},
   month = {July~19--21,},
   year = {2011}
}

@INPROCEEDINGS{PachecoLET2007,
  author = {Carlos Pacheco and Shuvendu K. Lahiri and Michael D. Ernst and Thomas
	Ball},
  title = {Feedback-directed random test generation},
  booktitle = {ICSE},
  year = {2007}
}

@BOOK{pezze-young:2007,
  title = {Software Testing and Analysis: Process, Principles, and Techniques},
  publisher = {John Wiley and Sons},
  year = {2007},
  author = {Mauro Pezz\`{e} and Michal Young},
  owner = {joe},
  timestamp = {2007.03.14}
}

@INPROCEEDINGS{Rothermel:1999:TCP:519621.853398,
  author = {Rothermel, Gregg and Untch, Roland H. and Chu, Chengyun and Harrold,
	Mary Jean},
  title = {Test Case Prioritization: An Empirical Study},
  booktitle = {Proceedings of the IEEE International Conference on Software Maintenance},
  year = {1999},
  series = {ICSM '99},
  pages = {179--188},
  acmid = {853398},
  isbn = {0-7695-0016-1},
  url = {http://dl.acm.org/citation.cfm?id=519621.853398}
}

@INPROCEEDINGS{Rummel:2005:TPR:1066677.1067016,
  author = {Rummel, Matthew J. and Kapfhammer, Gregory M. and Thall, Andrew},
  title = {Towards the prioritization of regression test suites with data flow
	information},
  booktitle = {Proceedings of the 2005 ACM Symposium on Applied Computing},
  year = {2005},
  series = {SAC '05},
  pages = {1499--1504},
  acmid = {1067016},
  doi = {10.1145/1066677.1067016},
  isbn = {1-58113-964-0},
  location = {Santa Fe, New Mexico},
  numpages = {6},
  url = {http://doi.acm.org/10.1145/1066677.1067016}
}

@INPROCEEDINGS{Saff:2005,
  author = {Saff, David and Artzi, Shay and Perkins, Jeff H. and Ernst, Michael
	D.},
  title = {Automatic test factoring for {Java}},
  booktitle = {ASE},
  year = {2005},
  pages = {114--123},
  acmid = {1101927},
  doi = {10.1145/1101908.1101927},
  isbn = {1-58113-993-4},
  keywords = {mock objects, test factoring, unit testing},
  location = {Long Beach, CA, USA},
  numpages = {10},
  url = {http://doi.acm.org/10.1145/1101908.1101927}
}

@INPROCEEDINGS{Santelices:2010:PDR:1828417.1828487,
  author = {Santelices, Raul and Harrold, Mary Jean and Orso, Alessandro},
  title = {Precisely Detecting Runtime Change Interactions for Evolving Software},
  booktitle = {Proceedings of the 2010 Third International Conference on Software
	Testing, Verification and Validation},
  year = {2010},
  series = {ICST '10},
  pages = {429--438},
  acmid = {1828487},
  doi = {10.1109/ICST.2010.29},
  isbn = {978-0-7695-3990-4},
  keywords = {change analysis, slicing, regression testing, program merging, impact
	analysis},
  numpages = {10},
  url = {http://dx.doi.org/10.1109/ICST.2010.29}
}

@ARTICLE{Singh2001453,
  author = {G.B. Singh and S. Gobrogge},
  title = {Information system architecture for developing reusable testplans
	for embedded software},
  journal = {Microprocessors and Microsystems},
  year = {2001},
  volume = {24},
  pages = {453 - 461},
  number = {9},
  doi = {10.1016/S0141-9331(00)00098-3},
  issn = {0141-9331},
  keywords = {Embedded systems},
  url = {http://www.sciencedirect.com/science/article/pii/S0141933100000983}
}

@INPROCEEDINGS{Srivastava:2002:EPT:566172.566187,
  author = {Srivastava, Amitabh and Thiagarajan, Jay},
  title = {Effectively prioritizing tests in development environment},
  booktitle = {ISSTA},
  year = {2002},
  pages = {97--106},
  acmid = {566187},
  doi = {10.1145/566172.566187},
  isbn = {1-58113-562-9},
  keywords = {regression testing, software testing, test minimization, test prioritization,
	test selection},
  location = {Roma, Italy},
  numpages = {10},
  url = {http://doi.acm.org/10.1145/566172.566187}
}

@INPROCEEDINGS{staatsetal:ICSE:2011,
  author = {Staats, Matt and Whalen, Michael W. and Heimdahl, Mats P.E.},
  title = {Programs, tests, and oracles: the foundations of testing revisited},
  booktitle = {Proceedings of the 33rd International Conference on Software Engineering,
	ICSE '11},
  year = {2011},
  pages = {391--400},
  acmid = {1985847},
  doi = {http://doi.acm.org/10.1145/1985793.1985847},
  isbn = {978-1-4503-0445-0},
  keywords = {testing formalism, theory of testing},
  location = {Waikiki, Honolulu, HI, USA},
  numpages = {10},
  owner = {joe},
  timestamp = {2011.12.21},
  url = {http://doi.acm.org/10.1145/1985793.1985847}
}

@ARTICLE{Sullivan:2004:SAB:1013886.1007531,
  author = {Sullivan, Kevin and Yang, Jinlin and Coppit, David and Khurshid,
	Sarfraz and Jackson, Daniel},
  title = {Software assurance by bounded exhaustive testing},
  journal = {SIGSOFT Software Engineering Notes},
  year = {2004},
  volume = {29},
  pages = {133--142},
  number = {4},
  acmid = {1007531},
  address = {New York, NY, USA},
  doi = {10.1145/1013886.1007531},
  issn = {0163-5948},
  issue_date = {July 2004},
  keywords = {TestEra, automated test case generation, bounded exhaustive testing,
	formal methods, reverse engineering, specification-based testing},
  numpages = {10},
  publisher = {ACM},
  url = {http://doi.acm.org/10.1145/1013886.1007531}
}

@INPROCEEDINGS{Wang:2007:AGC,
  author = {Wang, Zhimin and Elbaum, Sebastian and Rosenblum, David S.},
  title = {Automated Generation of Context-Aware Tests},
  booktitle = {ICSE},
  year = {2007},
  pages = {406--415},
  acmid = {1248873},
  doi = {10.1109/ICSE.2007.18},
  isbn = {0-7695-2828-7},
  numpages = {10},
  url = {http://dx.doi.org/10.1109/ICSE.2007.18}
}

@BOOK{whittakeretal:2012,
  title = {How Google Tests Software},
  publisher = {Addison-Wesley Professional},
  year = {2012},
  author = {James A. Whittaker and Jason Arbon and Jeff Carollo},
  owner = {joe},
  timestamp = {2012.01.05}
}

@MISC{wiki:test-suites,
  author = {Wikipedia},
  title = {Test Suite --- {W}ikipedia{,} The Free Encyclopedia},
  year = {2012},
  note = {[Online; accessed 3-Mar-2012]},
  url = {http://en.wikipedia.org/wiki/Test_suite}
}

@INPROCEEDINGS{wlokaetal:FSE:2009,
  author = {Wloka, Jan and Sridharan, Manu and Tip, Frank},
  title = {Refactoring for Reentrancy},
  booktitle = {Proceedings of the the 7th Joint Meeting of the European Software
	Engineering Conference and the ACM SIGSOFT Symposium on the Foundations
	of Software Engineering},
  year = {2009},
  series = {ESEC/FSE '09},
  pages = {173--182},
  acmid = {1595723},
  doi = {10.1145/1595696.1595723},
  isbn = {978-1-60558-001-2},
  keywords = {program transformation, reentrant code, refactoring},
  location = {Amsterdam, The Netherlands},
  numpages = {10},
  owner = {joe},
  timestamp = {2012.03.14},
  url = {http://doi.acm.org/10.1145/1595696.1595723}
}

@INPROCEEDINGS{Wong:1997:SER:851010.856115,
  author = {Wong, W. Eric and Horgan, Joseph R. and London, Saul and Bellcore,
	Hira Agrawal},
  title = {A Study of Effective Regression Testing in Practice},
  booktitle = {ISSRE},
  year = {1997},
  pages = {264--274},
  acmid = {856115},
  isbn = {0-8186-8120-9},
  keywords = {Regression Testing, Modification-Based Test Selection, Test Set Minimization,
	Test Set Prioritization},
  url = {http://dl.acm.org/citation.cfm?id=851010.856115}
}
@inproceedings{Wu:2010:LRV,
 author = {Wu, Ming and Long, Fan and Wang, Xi and Xu, Zhilei and Lin, Haoxiang and Liu, Xuezheng and Guo, Zhenyu and Guo, Huayang and Zhou, Lidong and Zhang, Zheng},
 title = {Language-based Replay via Data Flow Cut},
 booktitle = {FSE},
 year = {2010},
 isbn = {978-1-60558-791-2},
 location = {Santa Fe, New Mexico, USA},
 pages = {197--206},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1882291.1882322},
 doi = {10.1145/1882291.1882322},
 acmid = {1882322},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {data flow, graph cut, instrumentation, replay},
} 

@inproceedings{Kim:2013:OUT,
 author = {Kim, Taesoo and Chandra, Ramesh and Zeldovich, Nickolai},
 title = {Optimizing Unit Test Execution in Large Software Programs Using Dependency Analysis},
 booktitle = {Proceedings of the 4th Asia-Pacific Workshop on Systems},
 series = {APSys '13},
 year = {2013},
 isbn = {978-1-4503-2316-1},
 location = {Singapore, Singapore},
 pages = {19:1--19:6},
 articleno = {19},
 numpages = {6},
 url = {http://doi.acm.org/10.1145/2500727.2500748},
 doi = {10.1145/2500727.2500748},
 acmid = {2500748},
 publisher = {ACM},
 address = {New York, NY, USA},
} 
 

@ARTICLE{Zeller:2002,
  author = {Zeller, Andreas and Hildebrandt, Ralf},
  title = {Simplifying and Isolating Failure-Inducing Input},
  journal = {IEEE Transactions on Software Engineering},
  year = {2002},
  volume = {28},
  pages = {183--200},
  month = {February},
  acmid = {506206},
  address = {Piscataway, NJ, USA},
  doi = {10.1109/32.988498},
  issn = {0098-5589},
  issue = {2},
  keywords = {Automated debugging, debugging aids, testing tools, combinatorial
	testing, diagnostics, tracing.},
  numpages = {18},
  publisher = {IEEE Press},
  url = {http://dl.acm.org/citation.cfm?id=506201.506206}
}

@INPROCEEDINGS{zhangetal:TR:2006,
  author = {Zhang, Weilei and Ryder, Barbara G.},
  title = {Discovering accurate interclass test dependences},
  booktitle = {Proceedings of the 7th ACM SIGPLAN-SIGSOFT Workshop on Program Analysis
	for Software Tools and Engineering},
  year = {2007},
  series = {PASTE '07},
  pages = {55--62},
  acmid = {1251545},
  doi = {10.1145/1251535.1251545},
  isbn = {978-1-59593-595-3},
  keywords = {class integration test, interclass test dependence},
  location = {San Diego, California, USA},
  numpages = {8},
  url = {http://doi.acm.org/10.1145/1251535.1251545}
}

@PROCEEDINGS{DBLP:conf/sigsoft/2011,
  title = {SIGSOFT/FSE'11 19th ACM SIGSOFT Symposium on the Foundations of Software
	Engineering (FSE-19) and ESEC'11: 13rd European Software Engineering
	Conference (ESEC-13), Szeged, Hungary, September 5-9, 2011},
  year = {2011},
  editor = {Tibor Gyim{\'o}thy and Andreas Zeller},
  publisher = {ACM},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  booktitle = {SIGSOFT FSE},
  isbn = {978-1-4503-0443-6}
}

@MISC{jodatimecomm,
  title = {Personal communication},
  note = {\url{http://sourceforge.net/projects/joda-time/forums/forum/337835/topic/5111255}},
  key = {joda},
  owner = {joe},
  timestamp = {2012.03.15}
}

@MISC{proof-dependence-aware,
  author = {Zhang, Sai},
  month = sep,
  year = 2013,
  title = {Proof of the correctness of the dependence-aware k-bounded algorithm},
  note = {\url{http://homes.cs.washington.edu/~szhang/pdf/dependence-aware-algorithm-correctness-proof.pdf}},
}

@MISC{junit-javadoc,
  title = {{JU}nit {API} Documentation},
  note = {\url{http://junit.sourceforge.net/junit3.8.1/javadoc/junit/framework/TestSuite.html}},
  key = {JUnit},
  owner = {joe},
  timestamp = {2012.03.06}
}

@inproceedings{Steimann:2013,
 author = {Steimann, Friedrich and Frenkel, Marcus and Abreu, Rui},
 title = {Threats to the validity and value of empirical assessments of the accuracy of coverage-based fault locators},
 booktitle = {ISSTA},
 year = {2013},
 location = {Lugano, Switzerland},
 pages = {314--324},
 numpages = {11},
} 

@inproceedings{QuinonezTE2008,
   author = {Jaime Quinonez and Matthew S. Tschantz and Michael D. Ernst},
   title = {Inference of reference immutability},
   booktitle = {ECOOP},
   pages = {616--641},
   address = {Paphos, Cyprus},
   month = {July~9--11,},
   year = {2008}
}

@article{Csallner:2004,
 author = {Csallner, Christoph and Smaragdakis, Yannis},
 title = {{JCrasher}: an automatic robustness tester for {Java}},
 journal = {Softw. Pract. Exper.},
 issue_date = {September 2004},
 volume = {34},
 number = {11},
 month = sep,
 year = {2004},
 issn = {0038-0644},
 pages = {1025--1050},
 numpages = {26},
 url = {http://dx.doi.org/10.1002/spe.602},
 doi = {10.1002/spe.602},
 acmid = {1044434},
 publisher = {John Wiley \& Sons, Inc.},
 address = {New York, NY, USA},
 keywords = {java, random testing, software testing, state re-initialization, test case generation},
} 

@inproceedings{Jones:2002:VTI,
 author = {Jones, James A. and Harrold, Mary Jean and Stasko, John},
 title = {Visualization of test information to assist fault localization},
 booktitle = {ICSE},
 year = {2002},
 isbn = {1-58113-472-X},
 location = {Orlando, Florida},
 pages = {467--477},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/581339.581397},
 doi = {10.1145/581339.581397},
 acmid = {581397},
 publisher = {ACM},
 address = {New York, NY, USA},
} 


@MISC{unit-test-def,
  title = {Standard Definition of Unit Test},
  howpublished = {\url{http://c2.com/cgi/wiki?StandardDefinitionOfUnitTest}},
  note = {Accessed: 2012/03/16},
  key = {unit},
  owner = {joe},
  timestamp = {2012.03.16}
}

@comment{jabref-meta: selector_review:}

@comment{jabref-meta: selector_publisher:}

@comment{jabref-meta: selector_author:}

@comment{jabref-meta: selector_journal:}

@comment{jabref-meta: selector_keywords:}

@InProceedings{SaffE2004:mock-creation,
  author = 	 "David Saff and Michael D. Ernst",
  title = 	 "Automatic mock object creation for test factoring",
  booktitle =	 PASTE2004,
  pages = 	 "49--51",
  year =	 2004,
  address =	 PASTE2004addr,
  month =	 PASTE2004date,
  abstract =
   "{\em Test factoring} creates fast, focused unit tests from slow system-wide
    tests; each new unit test exercises only a subset of the functionality
    exercised by the system tests.  Augmenting a test suite with factored unit
    tests, and prioritizing the tests, should catch errors earlier in a test
    run.
    \par
    One way to factor a test is to introduce \emph{mock objects}.  If a test
    exercises a component A, which is designed to issue queries against or
    mutate another component B, the implementation of B can be replaced by a
    {\em mock}.  The mock has two purposes:  it checks that A's calls to B are
    as expected, and it simulates B's behavior in response.  Given a system
    test for A and B, and a record of A's and B's behavior when the system test
    is run, we would like to automatically generate unit tests for A in which B
    is mocked.  The factored tests can isolate bugs in A from bugs in B and, if
    B is slow or expensive, improve test performance or cost.
    \par
    This paper motivates test factoring with an illustrative example, proposes
    a simple procedure for automatically generating mock objects for factored
    tests, and gives examples of how the procedure can be extended to larger
    change languages.",
  category = "Testing",
  csetags = "mernst,mernst-Testing,plse",
  basefilename = "mock-factoring-paste2004",
  downloadsnonlocal =
   "http://homes.cs.washington.edu/~mernst/pubs/mock-factoring-paste2004.pdf PDF;
    http://homes.cs.washington.edu/~mernst/pubs/mock-factoring-paste2004.ps PostScript",
  summary =
   "A set of small, fast-running tests can be more useful than a single
    larger test.  This paper proposes a way to automatically factor a large
    test case into smaller tests, using mock objects to model the environment.",
}

@string{TSE     = IEEESE}

@Article{RenCR2006,
  author = 	 "Xiaoxia Ren and Ophelia C. Chesley and Barbara G. Ryder",
  title = 	 "Identifying failure causes in {Java} programs: An application of change impact analysis",
  journal = 	 TSE,
  year = 	 2006,
  volume = 	 32,
  number = 	 9,
  pages = 	 "718--732",
  month = 	 sep,
  downloads =    "http://doi.ieeecomputersociety.org/10.1109/TSE.2006.90 DOI",
  abstract =
   "During program maintenance, a programmer may make changes that enhance
    program functionality or fix bugs in code. Then, the programmer usually
    will run unit/regression tests to prevent invalidation of previously tested
    functionality. If a test fails unexpectedly, the programmer needs to
    explore the edit to find the failure-inducing changes for that test. Crisp
    uses results from Chianti, a tool that performs semantic change impact
    analysis [1], to allow the programmer to examine those parts of the edit
    that affect the failing test. Crisp then builds a compilable intermediate
    version of the program by adding a programmer-selected partial edit to the
    original code, augmenting the selection as necessary to ensure
    compilation. The programmer can reexecute the test on the intermediate
    version in order to locate the exact reasons for the failure by
    concentrating on the specific changes that were applied. In nine initial
    case studies on pairs of versions from two real Java programs, Daikon [2]
    and Eclipse jdt compiler [3], we were able to use Crisp to identify the
    failure-inducing changes for all but 1 of 68 failing tests. On average, 33
    changes were found to affect each failing test (of the 67), but only 1-4 of
    these changes were found to be actually failure-inducing.",
  usesDaikonAsTestSubject = 1,
}

@string{ASE2011 = "ASE"}
@string{ASE2011addr = ""}
# Website says "Nov 6-10"; probably actually Nov 8-10
@string{ASE2011date = nov}

@InProceedings{RobinsonEPAL2011,
  author = 	 "Brian Robinson and Michael D. Ernst and Jeff H. Perkins and Vinay Augustine and Nuo Li",
  title = 	 "Scaling up automated test generation: Automatically generating maintainable regression unit tests for programs",
  booktitle = ASE2011,
  NEEDpages = 	 "*",
  year = 	 2011,
  address = 	 ASE2011addr,
  month = 	 ASE2011date,
  abstract =
   "This paper presents an automatic technique for generating maintainable
    regression unit tests for programs.  We found previous test generation
    techniques inadequate for two main reasons.  First. they were designed
    for and evaluated upon libraries rather than applications.  Second, they
    were designed to find bugs rather than to create maintainable regression
    test suites:  the test suites that they generated were brittle and hard
    to understand.
    This paper presents a suite of techniques that address these problems by
    enhancing an existing unit test generation system.  In experiments using
    an industrial system, the generated tests achieved good coverage and
    mutation kill score, were readable by the product's developers, and
    required few edits as the system under test evolved.
    While our evaluation is in the context of one test generator, we are
    aware of many research systems that suffer similar limitations, so our
    approach and observations are more generally relevant.",
  basefilename = "maintainable-tests-ase2011",
  downloads = 
   "http://code.google.com/p/randoop/ Randoop implementation",
  category =  "Testing",
  csetags = "mernst,mernst-Testing,plse",
  summary =
   "This paper shows how to apply automatic test generation to the domain of
    programs (not just libraries), and how to make the resulting test suite
    maintainable (easy to understand and to adapt to changes in the program).",
}

@string{ECOOP2005 = "ECOOP"}
@string{ECOOP2005addr = ""}
@string{ECOOP2005date = jul}

@InProceedings{PachecoE2005,
  author =	 "Carlos Pacheco and Michael D. Ernst",
  title =	 "Eclat: Automatic generation and classification of test inputs",
  booktitle =	 ECOOP2005,
  pages = 	 "504--527",
  year = 	 2005,
  address =	 ECOOP2005addr,
  month =	 ECOOP2005date,
  abstract =
   "This paper describes a technique that selects, from a large set of test
    inputs, a small subset likely to reveal faults in the software under test.
    The technique takes a program or software component, plus a set of correct
    executions---say, from observations of the software running properly, or
    from an existing test suite that a user wishes to enhance.  The technique
    first infers an operational model of the software's operation.  Then,
    inputs whose operational pattern of execution differs from the model in
    specific ways are suggestive of faults.  These inputs are further reduced
    by selecting only one input per operational pattern. The result is a small
    portion of the original inputs, deemed by the technique as most likely to
    reveal faults.  Thus, the technique can also be seen as an error-detection
    technique.
    \par
    The paper describes two additional techniques that complement test input
    selection.  One is a technique for automatically producing an oracle (a set
    of assertions) for a test input from the operational model, thus
    transforming the test input into a test case.  The other is a
    classification-guided test input generation technique that also makes use
    of operational models and patterns.  When generating inputs, it filters out
    code sequences that are unlikely to contribute to legal inputs, improving
    the efficiency of its search for fault-revealing inputs.
    \par
    We have implemented these techniques in the Eclat tool, which generates
    unit tests for Java classes. Eclat's input is a set of classes to test and
    an example program execution---say, a passing test suite. Eclat's output is
    a set of JUnit test cases, each containing a potentially fault-revealing
    input and a set of assertions at least one of which fails.  In our
    experiments, Eclat successfully generated inputs that exposed
    fault-revealing behavior; we have used Eclat to reveal real errors in
    programs.  The inputs it selects as fault-revealing are an order of
    magnitude as likely to reveal a fault as all generated inputs.",
  basefilename = "classify-tests-ecoop2005",
  downloads =
   "http://pag.csail.mit.edu/eclat/ Eclat implementation;
    http://code.google.com/p/randoop/ Randoop implementation",
  downloadsnonlocal =
   "http://homes.cs.washington.edu/~mernst/pubs/classify-tests-ecoop2005.pdf PDF",
  category =     "Testing",
  csetags = "mernst,mernst-Testing,plse",
  summary =
   "This paper presents an automatic mechanism for selecting tests that are
    likely to expose errors---tests whose run-time behavior is maximally
    different from succeeding runs.  The paper also gives techniques for
    test input generation and for converting a test input into a test case.",
  usesDaikon = 1,
}
@inproceedings{Orso:2004:SRT,
 author = {Orso, Alessandro and Shi, Nanjuan and Harrold, Mary Jean},
 title = {Scaling Regression Testing to Large Software Systems},
 booktitle = {FSE},
 year = {2004},
 isbn = {1-58113-855-5},
 location = {Newport Beach, CA, USA},
 pages = {241--251},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/1029894.1029928},
 doi = {10.1145/1029894.1029928},
 acmid = {1029928},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {regression testing, software evolution, software maintenance, test selection, testing},
} 

@article{Briand:2009:ART,
 author = {Briand, L. C. and Labiche, Y. and He, S.},
 title = {Automating Regression Test Selection Based on UML Designs},
 journal = {Inf. Softw. Technol.},
 issue_date = {January, 2009},
 volume = {51},
 number = {1},
 month = jan,
 year = {2009},
 issn = {0950-5849},
 pages = {16--30},
 numpages = {15},
 url = {http://dx.doi.org/10.1016/j.infsof.2008.09.010},
 doi = {10.1016/j.infsof.2008.09.010},
 acmid = {1466092},
 publisher = {Butterworth-Heinemann},
 address = {Newton, MA, USA},
 keywords = {Object-oriented software engineering, Regression testing, Test selection, UML},
} 

@inproceedings{Zhang:2012:RMT,
 author = {Zhang, Lingming and Marinov, Darko and Zhang, Lu and Khurshid, Sarfraz},
 title = {Regression Mutation Testing},
 booktitle = {ISSTA},
 year = {2012},
 isbn = {978-1-4503-1454-1},
 location = {Minneapolis, MN, USA},
 pages = {331--341},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2338965.2336793},
 doi = {10.1145/2338965.2336793},
 acmid = {2336793},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{testdependence,
title={{Empirically Revisiting the Test Independence Assumption}},
author={Sai Zhang and Darioush Jalali and Jochen Wuttke and K{\i}van{\c{c}} Mu{\c{s}}lu and Wing Lam and Michael D. Ernst and David Notkin},
journal={University of Washington Technical Report UW-CSE-14-01-01.}, 
note = {Available at: \url{http://homes.cs.washington.edu/~szhang/pdf/testdependence.pdf}}},
year={2014},
}

@article{vmvm,
title={{Unit Test Virtualization with VMVM}},
author={Jonathan Bell and Gail Kaiser},
journal={University of Columbia Technical Report CUCS-021-13},
year={2013},
}

@inproceedings{Zhang:2013:IMF,
 author = {Zhang, Lingming and Zhang, Lu and Khurshid, Sarfraz},
 title = {Injecting Mechanical Faults to Localize Developer Faults for Evolving Software},
 booktitle = {OOPSLA},
 year = {2013},
 isbn = {978-1-4503-2374-1},
 location = {Indianapolis, Indiana, USA},
 pages = {765--784},
 numpages = {20},
 url = {http://doi.acm.org/10.1145/2509136.2509551},
 doi = {10.1145/2509136.2509551},
 acmid = {2509551},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {fault localization, mutation testing, regression testing, software evolution},
} 


@inproceedings{Zhang:2013:FMT,
 author = {Zhang, Lingming and Marinov, Darko and Khurshid, Sarfraz},
 title = {Faster Mutation Testing Inspired by Test Prioritization and Reduction},
 booktitle = {ISSTA},
 year = {2013},
 isbn = {978-1-4503-2159-4},
 location = {Lugano, Switzerland},
 pages = {235--245},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2483760.2483782},
 doi = {10.1145/2483760.2483782},
 acmid = {2483782},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Mutation testing, Test Prioritization, Test Reduction},
} 

@inproceedings{Nanda:2011:RTP,
 author = {Nanda, Agastya and Mani, Senthil and Sinha, Saurabh and Harrold, Mary Jean and Orso, Alessandro},
 title = {Regression Testing in the Presence of Non-code Changes},
 booktitle = {ICST},
 year = {2011},
 isbn = {978-0-7695-4342-0},
 pages = {21--30},
 numpages = {10},
 url = {http://dx.doi.org/10.1109/ICST.2011.60},
 doi = {10.1109/ICST.2011.60},
 acmid = {1990068},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@inproceedings{Jiang:2009:ART,
 author = {Jiang, Bo and Zhang, Zhenyu and Chan, W. K. and Tse, T. H.},
 title = {Adaptive Random Test Case Prioritization},
 booktitle = {ASE},
 year = {2009},
 isbn = {978-0-7695-3891-4},
 pages = {233--244},
 numpages = {12},
 url = {http://dx.doi.org/10.1109/ASE.2009.77},
 doi = {10.1109/ASE.2009.77},
 acmid = {1747523},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {Adaptive random testing, test case prioritization},
} 

@inproceedings{hsu09may,
  author =       {H.-Y. Hsu and A. Orso},
  title =        {{MINTS: A General Framework and Tool for Supporting
  Test-suite Minimization}},
  booktitle =    {ICSE},
  address =      {Vancouver, Canada},
  month =        {May},
  year =         {2009},
}
